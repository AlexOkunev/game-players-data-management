version: '3.1'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19091,PLAINTEXT_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19092,PLAINTEXT_EXTERNAL://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    depends_on:
      - zookeeper

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:19093,PLAINTEXT_EXTERNAL://${DOCKER_HOST_IP:-localhost}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    depends_on:
      - zookeeper

#  connect:
#    image: confluentinc/cp-kafka-connect:latest
#    container_name: connect
#    hostname: connect
#    depends_on:
#      - zookeeper
#      - kafka1
#      - kafka2
#      - kafka3
#    ports:
#      - 8083:8083
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: "kafka1:19091,kafka2:19092,kafka3:19093"
#      CONNECT_REST_PORT: "8083"
#      CONNECT_GROUP_ID: "local-connect"
#      CONNECT_CONFIG_STORAGE_TOPIC: "local-connect-config"
#      CONNECT_OFFSET_STORAGE_TOPIC: "local-connect-offsets"
#      CONNECT_STATUS_STORAGE_TOPIC: "local-connect-status"
#      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
#      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
#      CONNECT_PLUGIN_PATH: /usr/share/java/,/etc/kafka-connect/jars
#    volumes:
#      - ./connect:/etc/kafka-connect/jars

#  postgres:
#    image: postgres:latest
#    container_name: postgres
#    hostname: postgres
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: password
#    volumes:
#      - ./postgres/custom-config.conf:/etc/postgresql/postgresql.conf
#    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:19091,kafka2:19092,kafka3:19093
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka1:19091,kafka2:19092,kafka3:19093
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081